/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package emInterfaces;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * Standard types of waveform that the signal generator can produce
 */
public enum emWaveFormType implements org.apache.thrift.TEnum {
  /**
   * Undefined, here for consistency
   */
  emNULL(0),
  ARBITRARY(1),
  PWM(2),
  SAW(3),
  SINE(4);

  private final int value;

  private emWaveFormType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static emWaveFormType findByValue(int value) { 
    switch (value) {
      case 0:
        return emNULL;
      case 1:
        return ARBITRARY;
      case 2:
        return PWM;
      case 3:
        return SAW;
      case 4:
        return SINE;
      default:
        return null;
    }
  }
}
